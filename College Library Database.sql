# CREATION OF TABLES #

CREATE TABLE MEMBER (
    lib_cardNo INT(4) NOT NULL,
    f_name VARCHAR(10),
    l_name VARCHAR(10),
    email VARCHAR(20),
    phone_No BIGINT(20),
    mem_Type VARCHAR(7),
    mem_Status VARCHAR(10)
);

INSERT INTO MEMBER VALUES 
(7890,'HARRY','STYLES','HS@QMUL.AC.UK',441482664408,
  'STUDENT','ACTIVE');
 
INSERT INTO MEMBER VALUES 
(2345,'LOUIS', 'TOMLINSON',	
 'LT@QMUL.AC.UK',447922722477, 'STUDENT','SUSPENDED');
 
INSERT INTO MEMBER VALUES 
(3489,'NIALL', 'HORAN',	
 'NH@QMUL.AC.UK',447570937590, 'STAFF','OVERDUE');
 
INSERT INTO MEMBER VALUES 
 (5678,'JENNIFER', 'ANISTON',	
 'JA@QMUL.AC.UK',443350157822, 'STAFF','ACTIVE');

INSERT INTO MEMBER VALUES 
(5072,'LIAM', 'PAYNE',	
 'LP@QMUL.AC.UK',447525371530, 'STUDENT','INACTIVE');
 
INSERT INTO MEMBER VALUES 
(2039,'EMMA', 'WATSON',	
 'EW@QMUL.AC.UK',441277937297, 'STAFF','OVERDUE');
 
INSERT INTO MEMBER VALUES 
(2601,'ROWAN', 'ATIKNSON',	
 'RA@QMUL.AC.UK',447324292457, 'STUDENT','ACTIVE');
 
INSERT INTO MEMBER VALUES 
 (5100,'ZAYN', 'MALIK',	
 'ZM@QMUL.AC.UK',441362464511, 'STAFF','ACTIVE');
 
INSERT INTO MEMBER VALUES 
(2789,'JACK', 'BLACK',	
 'JB@QMUL.AC.UK',442364899223, 'STUDENT','OVERDUE');
 
INSERT INTO MEMBER VALUES 
(2789,'EREN', 'YEAGAR',	
 'EY@QMUL.AC.UK',446769342623, 'STUDENT','ACTIVE');
   
CREATE TABLE STUDENT 
(lib_cardNo INT (4) NOT NULL,
max_borrowableStu INT (1));

INSERT INTO STUDENT VALUES 
 (7890,5);
 
INSERT INTO STUDENT VALUES 
 (5237,5);
INSERT INTO STUDENT VALUES
  (5072,5);
INSERT INTO STUDENT VALUES 
 (2601,5);
INSERT INTO STUDENT VALUES 
 (2789,5);
INSERT INTO STUDENT VALUES 
(2345,5);
 
CREATE TABLE STAFF 
(lib_cardNo INT (4) NOT NULL,
 max_borrowableStaff INT (2));
 
INSERT INTO STAFF VALUES 
(3489,10);
INSERT INTO STAFF VALUES 
(5678,10);
INSERT INTO STAFF VALUES 
(2039,10);
INSERT INTO STAFF VALUES 
(5110,10);
 
CREATE TABLE RESERVATION 
(reservation_ID INT(5),
 lib_cardNo INT(4),
 resource_ID VARCHAR (5),
 res_dateFrom DATE,
res_dateTo DATE,
res_Status VARCHAR(10));

INSERT INTO RESERVATION VALUES 
(57382,7890,'740B',
STR_TO_DATE('01-9-2023', '%d-%m-%Y'), 
STR_TO_DATE('02-9-2023', '%d-%m-%Y'),'notified');
 
INSERT INTO RESERVATION VALUES 
(57383,7890,'7010B',
STR_TO_DATE('05-9-2023', '%d-%m-%Y'), 
STR_TO_DATE('06-9-2023', '%d-%m-%Y'),'accepted');
 
INSERT INTO RESERVATION VALUES 
 (57384,3489,'740B',
STR_TO_DATE('07-9-2023', '%d-%m-%Y'), 
 STR_TO_DATE('08-9-2023', '%d-%m-%Y'),'cancelled');
 
INSERT INTO RESERVATION VALUES 
(57385,5678,'780C',
STR_TO_DATE('05-11-2023', '%d-%m-%Y'), 
STR_TO_DATE('06-11-2023', '%d-%m-%Y'),'notified');
 
INSERT INTO RESERVATION VALUES 
(57386, 5072,'740B',
  STR_TO_DATE('18-10-2023', '%d-%m-%Y'), 
 STR_TO_DATE('20-10-2023', '%d-%m-%Y'),'accepted');
 
INSERT INTO RESERVATION VALUES 
(57387,2039,'7009B',
STR_TO_DATE('20-10-2023', '%d-%m-%Y'), 
 STR_TO_DATE('21-10-2023', '%d-%m-%Y'),'declined');
 
INSERT INTO RESERVATION VALUES 
(57388,2601,'7009B',
STR_TO_DATE('22-10-2023', '%d-%m-%Y'), 
STR_TO_DATE('23-10-2023', '%d-%m-%Y'),'expired');
 
INSERT INTO RESERVATION VALUES 
 (57389,5237,'7010B',
 STR_TO_DATE('24-10-2023', '%d-%m-%Y'), 
 STR_TO_DATE('24-10-2023', '%d-%m-%Y'),'notified');

CREATE TABLE LIBRARYRESOURCE
(resource_ID VARCHAR (5),category VARCHAR (5), source VARCHAR (20),
description VARCHAR (90), publication_Date INT (4),
class_No INT (1),floor_No INT (1),shelf_No VARCHAR (2));

INSERT INTO LIBRARYRESOURCE VALUES
('740B','book','Allen G. Taylor',
'Guide for Database Development and Implementation 6th Edition',
2011,1,1,'1a');
 
INSERT INTO LIBRARYRESOURCE VALUES
('7010B','book',
 'Tanenbaum et al',' Explain how networks work from the inside out.6th Edition',
2021,2,2,'2c');
 
INSERT INTO LIBRARYRESOURCE VALUES
('7009B','book',
 'Ronald J. Leach','Practical Guidance on the Efficient Development of High-Quality Software second Edition',
2020,3,2,'3f');
 
INSERT INTO LIBRARYRESOURCE VALUES 
('780V','video',
 'Luna Lovegood', 'National Geographic' ,
2008,4,3, NULL);
 
 
INSERT INTO LIBRARYRESOURCE VALUES 
('7010D','dvd',
 'Brendan Fraser', 'A introduction to the culture of Egypt',
2016,4,3,'3a');
 
INSERT INTO LIBRARYRESOURCE VALUES 
('7011D','dvd',
 'J.J. Abrams', 'Star Wars: The Skywalker Saga',
2018,5,3, '3b');
 
 INSERT INTO LIBRARYRESOURCE VALUES 
('779C','cd',
 'Juan Gonzalez', 'Spanish 101 for beginners',
2012,6,3,'3c');
 
INSERT INTO LIBRARYRESOURCE VALUES 
('780C','cd',
'Pratap Mehta', 'Shaping the emerging world: India and the multilateral order',
2022,4,3, '3d');
 
CREATE TABLE BOOK
(resource_ID  VARCHAR (5), book_Title VARCHAR (50));
 
INSERT INTO BOOK VALUES 
('740B','Database for dummies');
 
INSERT INTO BOOK VALUES 
('7010B', 'Computer Networks');
 
INSERT INTO BOOK VALUES
('7009B', 'Introduction to Software Engineering');
 
CREATE TABLE VIDEO
(resource_ID  VARCHAR (5), video_Title VARCHAR (40));
 
INSERT INTO VIDEO VALUES 
('780V', 'National Geographic: the Arctic Cirlce');
 
CREATE TABLE DVD 
(resource_ID  VARCHAR (5), DVD_Title VARCHAR (40));
 
INSERT INTO DVD VALUES
('7010D' , 'Egyptology:A documentary');
 
INSERT INTO DVD VALUES
('7011D' , 'Star Wars: The Skywalker Saga');
 
CREATE TABLE CD
(resource_ID  VARCHAR (5), CD_Title VARCHAR (70));
 
INSERT INTO CD VALUES
('779C','Spanish 101 for beginners');
INSERT INTO CD VALUES
('780C' , 'Shaping the emerging world: India and the multilateral order');
 
CREATE TABLE COPY 
( copy_ID INT (3) , copies_Available INT (1), resource_ID VARCHAR (5) , copies_Loaned INT (1) );
 
INSERT INTO COPY VALUES
( 101 ,1 , '7040B' ,1);
 
INSERT INTO COPY VALUES
(102 , 2 , '7010B',3);
 
INSERT INTO COPY VALUES
(103, 3 , '7009B',1);
 
INSERT INTO COPY VALUES 
(104,NULL,'780V',NULL);
 
INSERT INTO COPY VALUES
(105,1 , '7010D', 0);

INSERT INTO COPY VALUES
(106,2,'7011D',2);
 
INSERT INTO COPY VALUES
(118,1,'780C' , 1);
 
INSERT INTO COPY VALUES 
(119,1, '779C',0);
 
CREATE TABLE LOAN 
(loan_ID   VARCHAR (7), loan_Status VARCHAR (8) , lib_cardNo INT (4) , resource_ID VARCHAR (5) , issue_Date DATE , due_Date DATE , return_Date DATE , loan_Amt CHAR (7) , over_dueAmt CHAR (7));
 
INSERT INTO LOAN VALUES 
('a28633','overdue', 7890,'7010B' , STR_TO_DATE ('02-09-2023', '%d-%m-%Y'), STR_TO_DATE ('16-09-2023',  '%d-%m-%Y'),
STR_TO_DATE ('18-09-2023',  '%d-%m-%Y'), '£2.00' , '£2.00');

INSERT INTO LOAN VALUES 
('b34940','borrowed', 5678,'740B' , STR_TO_DATE ('06-09-2023',  '%d-%m-%Y'), STR_TO_DATE ('20-09-2023',  '%d-%m-%Y'),
STR_TO_DATE ('19-09-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOAN VALUES 
('c74894','overdue', 3489,'7011D' , STR_TO_DATE ('21-09-2023',  '%d-%m-%Y'), STR_TO_DATE ('23-09-2023',  '%d-%m-%Y'),
STR_TO_DATE ('28-09-2023',  '%d-%m-%Y'), '£5.00' , '£5.00');
 
INSERT INTO LOAN VALUES 
('g18730','borrowed', 7890,'7009B' , STR_TO_DATE ('28-09-2023', '%d-%m-%Y'), STR_TO_DATE ('12-10-2023',  '%d-%m-%Y'),
STR_TO_DATE ('11-10-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOAN VALUES 
('e09876','overdue', 2789,'7011D' , STR_TO_DATE ('12-10-2023',  '%d-%m-%Y'), STR_TO_DATE ('14-10-2023',  '%d-%m-%Y'),
STR_TO_DATE ('15-10-2023',  '%d-%m-%Y'), '£1.00' , '£1.00');
 
INSERT INTO LOAN VALUES 
('h45678','overdue', 2345,'7010B' , STR_TO_DATE ('13-10-2023', '%d-%m-%Y'), STR_TO_DATE ('27-10-2023',  '%d-%m-%Y'),
STR_TO_DATE ('07-11-2023',  '%d-%m-%Y'), '£11.00' , '£11.00');
 
INSERT INTO LOAN VALUES 
('d72628','borrowed', 5072,'740B' , STR_TO_DATE ('20-10-2023',  '%d-%m-%Y'), STR_TO_DATE ('03-11-2023',  '%d-%m-%Y'),
STR_TO_DATE ('30-10-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOAN VALUES 
('i23930','borrowed', 2601,'7010B' , STR_TO_DATE ('24-10-2023',  '%d-%m-%Y'), STR_TO_DATE ('07-11-2023',  '%d-%m-%Y'),
STR_TO_DATE ('01-11-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOAN VALUES 
('f81693','borrowed', 5287,'780C' , STR_TO_DATE ('24-10-2023', '%d-%m-%Y'), STR_TO_DATE ('7-11-2023',  '%d-%m-%Y'),
STR_TO_DATE ('6-11-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
 CREATE TABLE LOANARCHIVE  
( loan_ID   VARCHAR (7),loan_Status VARCHAR (8) , resource_ID VARCHAR (5) , issue_Date DATE , due_Date DATE , return_Date DATE , loan_Amt CHAR (7) , over_dueAmt CHAR (7));
 
INSERT INTO LOANARCHIVE VALUES 
('j28633','overdue', '7010B' , STR_TO_DATE ('02-06-2023',  '%d-%m-%Y'), STR_TO_DATE ('16-06-2023',  '%d-%m-%Y'),
STR_TO_DATE ('15-06-2023', '%d-%m-%Y'), '£2.00' , '£2.00');
 
INSERT INTO LOANARCHIVE VALUES 
('k34940','borrowed', '740B' , STR_TO_DATE ('06-06-2023',  '%d-%m-%Y'), STR_TO_DATE ('20-06-2023',  '%d-%m-%Y'),
STR_TO_DATE ('19-06-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOANARCHIVE VALUES 
('l74894','overdue', '7011D' , STR_TO_DATE ('21-06-2023',  '%d-%m-%Y'), STR_TO_DATE ('22-06-2023',  '%d-%m-%Y'),
STR_TO_DATE ('27-06-2023',  '%d-%m-%Y'), '£5.00' , '£5.00');
 
INSERT INTO LOANARCHIVE VALUES 
('m18730','borrowed', '7009B' , STR_TO_DATE ('28-06-2023',  '%d-%m-%Y'), STR_TO_DATE ('12-07-2023',  '%d-%m-%Y'),
STR_TO_DATE ('12-7-2023',  '%d-%m-%Y'), 0.00 , 0.00);
INSERT INTO LOANARCHIVE VALUES 
('n09876','overdue', '7011D' , STR_TO_DATE ('12-07-2023',  '%d-%m-%Y'), STR_TO_DATE ('13-07-2023',  '%d-%m-%Y'),
STR_TO_DATE ('14-07-2023',  '%d-%m-%Y'), '£1.00' , '£1.00');
 
INSERT INTO LOANARCHIVE VALUES 
('o45678','overdue', '7010B' , STR_TO_DATE ('13-07-2023',  '%d-%m-%Y'), STR_TO_DATE ('27-07-2023',  '%d-%m-%Y'),
STR_TO_DATE ('07-08-2023',  '%d-%m-%Y'), '£11.00' , '£11.00');
 
INSERT INTO LOANARCHIVE VALUES 
('p72628','borrowed', '740B' , STR_TO_DATE ('20-07-2023',  '%d-%m-%Y'), STR_TO_DATE ('03-07-2023',  '%d-%m-%Y'),
STR_TO_DATE ('30-07-2023',  '%d-%m-%Y'), 0.00 , 0.00);
 
INSERT INTO LOANARCHIVE VALUES 
('q23930','borrowed', '7010B' , STR_TO_DATE ('24-07-2023',  '%d-%m-%Y'), STR_TO_DATE ('07-08-2023',  '%d-%m-%Y'),
STR_TO_DATE ('01-08-2023',  '%d-%m-%Y'), 0.00, 0.00);
 
INSERT INTO LOANARCHIVE VALUES 
('r81693','borrowed', '780C' , STR_TO_DATE ('24-07-2023',  '%d-%m-%Y'), STR_TO_DATE ('25-07-2023',  '%d-%m-%Y'),
STR_TO_DATE ('25-07-2023',  '%d-%m-%Y'), 0.00 , 0.00);

# VIEWS 
#1
UPDATE LOAN 
SET LOAN_AMT = '0', OVER_DUEAMT = '0'
WHERE LOAN_AMT = '£5.00' AND OVER_DUEAMT = '£5.00';

#2
CREATE VIEW OVERDUERESOURCES AS 
SELECT LOAN_ID, LOAN_STATUS, LIB_CARDNO, RESOURCE_ID FROM loan
WHERE loan_Status = 'overdue';

#3
CREATE VIEW OVERDUEAMOUNT AS 
SELECT ISSUE_DATE,LOAN_AMT,OVER_DUEAMT FROM LOAN
WHERE LOAN_STATUS = 'overdue';

#4
CREATE VIEW OVERDUEMEMBER AS 
SELECT LIB_CARDNO, F_NAME, L_NAME, EMAIL, PHONE_NO, MEM_TYPE FROM MEMBER 
WHERE MEM_STATUS = 'overdue';

# Queries 
#1

UPDATE LOAN 
SET LOAN_AMT = '0', OVER_DUEAMT = '0'
WHERE LOAN_AMT = '£5.00' AND OVER_DUEAMT = '£5.00' ;

#2
SELECT DESCRIPTION, SOURCE, CATEGORY , FLOOR_NO , SHELF_NO
FROM LIBRARYRESOURCE
WHERE DESCRIPTION LIKE 'S%'
AND FLOOR_NO = 3 
ORDER BY SOURCE DESC ;

#3
SELECT RESERVATION.LIB_CARDNO,RESERVATION.RES_DATEFROM, RESOURCE_ID , MEMBER.MEM_TYPE,MEMBER.MEM_STATUS, MEMBER.F_NAME, MEMBER.L_NAME , MEMBER.EMAIL 
FROM RESERVATION , MEMBER 
WHERE RESERVATION.LIB_CARDNO = MEMBER.LIB_CARDNO
ORDER BY RESERVATION.LIB_CARDNO;

#4
SELECT LIB_CARDNO, ISSUE_DATE, DUE_DATE, RETURN_DATE,  
CASE WHEN DUE_DATE < RETURN_DATE  THEN 'LATE' ELSE 'ON TIME' END AS STATUS   
FROM LOAN  ;

#5

SELECT COUNT(*)
FROM LIBRARYRESOURCE
WHERE CATEGORY = 'book';

#6

SELECT DISTINCT CATEGORY FROM LIBRARYRESOURCE;

#7
SELECT LOAN_STATUS, COUNT(*)
FROM LOAN
GROUP BY LOAN_STATUS;

#8
SELECT MEM_TYPE, F_NAME, L_NAME, EMAIL, PHONE_NO
FROM MEMBER
WHERE MEM_STATUS = 'INACTIVE' OR MEM_STATUS = 'SUSPENDED'
ORDER BY F_NAME, L_NAME, EMAIL, PHONE_NO, MEM_TYPE;

#9
SELECT LIBRARYRESOURCE.RESOURCE_ID, LIBRARYRESOURCE.CATEGORY, BOOK.BOOK_TITLE, VIDEO.VIDEO_TITLE, DVD.DVD_TITLE, CD.CD_TITLE
FROM LIBRARYRESOURCE
LEFT JOIN BOOK ON LIBRARYRESOURCE.RESOURCE_ID = BOOK.RESOURCE_ID
LEFT JOIN VIDEO ON LIBRARYRESOURCE.RESOURCE_ID = VIDEO.RESOURCE_ID
LEFT JOIN DVD ON LIBRARYRESOURCE.RESOURCE_ID = DVD.RESOURCE_ID
LEFT JOIN CD ON LIBRARYRESOURCE.RESOURCE_ID = CD.RESOURCE_ID
ORDER BY LIBRARYRESOURCE.RESOURCE_ID;

#10

SELECT count(DISTINCT CATEGORY) 
FROM LIBRARYRESOURCE;

#11

SELECT *
FROM MEMBER
WHERE F_NAME LIKE '_IA%'
ORDER BY L_NAME;

#12
SELECT *
FROM RESERVATION
INNER JOIN LIBRARYRESOURCE
ON RESERVATION.RESOURCE_ID = LIBRARYRESOURCE.RESOURCE_ID;

#13

SELECT *
FROM reservation
INNER JOIN libraryresource
ON reservation.resource_ID = libraryresource.resource_ID;

#subqueries

SELECT LOAN_ID,LOAN_STATUS,LIB_CARDNO,RESOURCE_ID,OVER_DUEAMT FROM LOAN 
WHERE OVER_DUEAMT > (SELECT AVG(OVER_DUEAMT) FROM LOAN );


SELECT * 
FROM  RESERVATION
WHERE LIB_CARDNO IN 
	(SELECT LIB_CARDNO
	 FROM STAFF 
     UNION 
     SELECT LIB_CARDNO
     FROM STUDENT 
      );
      
SELECT book_title
FROM book 
WHERE resource_ID IN (SELECT resource_ID FROM Reservation WHERE res_status = 'cancelled' or  res_status = 'declined' );

SELECT book_title
FROM book
WHERE resource_ID IN (
    SELECT resource_ID FROM loan WHERE due_date >  return_date
);











